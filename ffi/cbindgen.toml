header                  = """
/* Description: librex C header generated from emacs-regexp-ffi Rust code.

Copyright (C) 2024 Danny McClanahan <dmcC2@hypnicjerk.ai>
SPDX-License-Identifier: GPL-3.0-or-later

This file is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as
published by the Free Software Foundation; either version 3 of the
License, or (at your option) any later version.

This file is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>. */"""
include_guard           = "rex_h"
autogen_warning         = "/* This file is autogenerated from Rust code by cbindgen. */"
include_version         = true
documentation           = true

language                = "C"
cpp_compat              = false
usize_is_size_t         = true
style                   = "both"
no_includes             = true
sys_includes            = ["stdbool.h", "stddef.h", "stdint.h"]
includes                = []

[defines]
"feature = panic-testing" = "PANIC_TESTING"

[export]
prefix                  = "REX_"
renaming_overrides_prefixing = true

[fn]
must_use                = "__attribute__((warn_unused_result))"
deprecated              = "__attribute__((deprecated))"
no_return               = "__attribute__((noreturn))"

[struct]
must_use                = "__attribute__((warn_unused))"
deprecated              = "__attribute__((deprecated))"
derive_constructor      = true

[enum]
# FIXME: this does not appear to work at all?
must_use                = "__attribute__((warn_unused))"
deprecated              = "__attribute__((deprecated))"
rename_variants         = "QualifiedScreamingSnakeCase"

[ptr]
# TODO: this works in clang, but gcc has no equivalent!
# non_null_attribute      = "_Nonnull"
